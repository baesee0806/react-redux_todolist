{"ast":null,"code":"const ADD_LIST = \"ADD_LIST\";\nconst DELETE_LIST = \"DELETE_LIST\";\nconst COMPLETE_STATE = \"COMPLETE_STATE\";\nexport const addList = payload => {\n  return {\n    type: ADD_LIST,\n    payload\n  };\n};\nexport const deleteList = payload => {\n  return {\n    type: DELETE_LIST,\n    payload\n  };\n};\nexport const completeState = payload => {\n  return {\n    type: COMPLETE_STATE,\n    payload\n  };\n};\nlet list_number = 0;\n// 초기 상태값\nconst initialState = {\n  Lists: [{\n    id: list_number++,\n    title: '리엑트 공부하기 ',\n    content: '리엑트는 너무 어려워',\n    complete: false\n  }, {\n    id: list_number++,\n    title: '리엑트 공부하기 ',\n    content: '리엑트는 너무 어려워',\n    complete: false\n  }]\n};\n\n// 리듀서\nconst Users = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_LIST:\n      return {\n        ...state,\n        Lists: [...state.Lists, action.payload]\n      };\n    case DELETE_LIST:\n      return {\n        ...state,\n        Lists: state.Lists.filter(list => list.id !== action.payload)\n      };\n    case COMPLETE_STATE:\n      return {\n        ...state,\n        Lists: state.Lists.map(list => {\n          if (list.id === action.payload) {\n            return {\n              ...list,\n              complete: !list.complete\n            };\n          } else {\n            return list;\n          }\n        })\n      };\n    default:\n      return state;\n  }\n};\n\n// 모듈파일에서는 리듀서를 export default 한다.\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["ADD_LIST","DELETE_LIST","COMPLETE_STATE","addList","payload","type","deleteList","completeState","list_number","initialState","Lists","id","title","content","complete","Users","state","action","filter","list","map"],"sources":["/Users/baeseong-wan/Desktop/sparta-react/react-redux_todolist/src/redux/modules/toDoList.js"],"sourcesContent":["const ADD_LIST = \"ADD_LIST\"\nconst DELETE_LIST = \"DELETE_LIST\"\nconst COMPLETE_STATE = \"COMPLETE_STATE\"\nexport const addList = (payload)=>{\n    return{\n        type:ADD_LIST,\n        payload,\n    }\n}\n\nexport const deleteList = (payload)=>{\n    return{\n        type:DELETE_LIST,\n        payload,\n    }\n}\nexport const completeState = (payload) =>{\n    return{\n        type:COMPLETE_STATE,\n        payload,\n    }\n}\n\n\n\nlet list_number = 0;\n// 초기 상태값\nconst initialState = {\n    Lists:[\n        {\n            id:list_number++,\n            title:'리엑트 공부하기 ',\n            content:'리엑트는 너무 어려워',\n            complete:false,\n        },\n        {\n            id:list_number++,\n            title:'리엑트 공부하기 ',\n            content:'리엑트는 너무 어려워',\n            complete:false,\n        },\n    ]\n  };\n  \n  // 리듀서\n  const Users = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_LIST:\n            return{\n                ...state,\n                Lists:[...state.Lists,action.payload]\n            }\n        case DELETE_LIST:\n            return{\n                ...state,\n                Lists:state.Lists.filter(list=>list.id!== action.payload),\n            }\n        case COMPLETE_STATE:\n            return{\n                ...state,\n                Lists:state.Lists.map((list)=>{\n                    if(list.id === action.payload){\n                        return {\n                            ...list,\n                            complete:!list.complete,\n                        }\n                    }else {\n                        return list\n                    }\n                })\n            }\n      default:\n        return state;\n    }\n  };\n  \n  // 모듈파일에서는 리듀서를 export default 한다.\n  export default Users;"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAU;AAC3B,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,cAAc,GAAG,gBAAgB;AACvC,OAAO,MAAMC,OAAO,GAAIC,OAAO,IAAG;EAC9B,OAAM;IACFC,IAAI,EAACL,QAAQ;IACbI;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAME,UAAU,GAAIF,OAAO,IAAG;EACjC,OAAM;IACFC,IAAI,EAACJ,WAAW;IAChBG;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMG,aAAa,GAAIH,OAAO,IAAI;EACrC,OAAM;IACFC,IAAI,EAACH,cAAc;IACnBE;EACJ,CAAC;AACL,CAAC;AAID,IAAII,WAAW,GAAG,CAAC;AACnB;AACA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC,CACF;IACIC,EAAE,EAACH,WAAW,EAAE;IAChBI,KAAK,EAAC,WAAW;IACjBC,OAAO,EAAC,aAAa;IACrBC,QAAQ,EAAC;EACb,CAAC,EACD;IACIH,EAAE,EAACH,WAAW,EAAE;IAChBI,KAAK,EAAC,WAAW;IACjBC,OAAO,EAAC,aAAa;IACrBC,QAAQ,EAAC;EACb,CAAC;AAEP,CAAC;;AAED;AACA,MAAMC,KAAK,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGP,YAAY;EAAA,IAAEQ,MAAM;EACzC,QAAQA,MAAM,CAACZ,IAAI;IACf,KAAKL,QAAQ;MACT,OAAM;QACF,GAAGgB,KAAK;QACRN,KAAK,EAAC,CAAC,GAAGM,KAAK,CAACN,KAAK,EAACO,MAAM,CAACb,OAAO;MACxC,CAAC;IACL,KAAKH,WAAW;MACZ,OAAM;QACF,GAAGe,KAAK;QACRN,KAAK,EAACM,KAAK,CAACN,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACR,EAAE,KAAIM,MAAM,CAACb,OAAO;MAC5D,CAAC;IACL,KAAKF,cAAc;MACf,OAAM;QACF,GAAGc,KAAK;QACRN,KAAK,EAACM,KAAK,CAACN,KAAK,CAACU,GAAG,CAAED,IAAI,IAAG;UAC1B,IAAGA,IAAI,CAACR,EAAE,KAAKM,MAAM,CAACb,OAAO,EAAC;YAC1B,OAAO;cACH,GAAGe,IAAI;cACPL,QAAQ,EAAC,CAACK,IAAI,CAACL;YACnB,CAAC;UACL,CAAC,MAAK;YACF,OAAOK,IAAI;UACf;QACJ,CAAC;MACL,CAAC;IACP;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;;AAED;AAAA,KA/BMD,KAAK;AAgCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}